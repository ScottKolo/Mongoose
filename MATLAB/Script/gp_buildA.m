function A = gp_buildA(which)

switch which
    case 1
        % Get a sparse identity
        A = speye(17);

        % Set edge weights:
        A(1,7) = 570;
        A(1,8) = 343;
        A(1,14) = 187;
        A(1,15) = 529;
        A(2,4) = 1491;
        A(2,15) = 118;
        A(3,6) = 745;
        A(3,7) = 1072;
        A(3,8) = 166;
        A(3,10) = 159;
        A(3,14) = 173;
        A(3,16) = 633;
        A(4,15) = 567;
        A(5,9) = 1362;
        A(5,11) = 822;
        A(5,17) = 236;
        A(6,10) = 638;
        A(6,13) = 849;
        A(7,14) = 585;
        A(8,14) = 960;
        A(8,16) = 974;
        A(9,12) = 186;
        A(9,13) = 650;
        A(9,17) = 236;
        A(10,11) = 295;
        A(10,12) = 301;
        A(10,13) = 151;
        A(10,16) = 613;
        A(11,12) = 1205;
        A(11,17) = 466;
        A(12,13) = 957;
        A(12,17) = 23;

        % Set node weights:
        A(1,1)   = 7487;
        A(2,2)   = 6912;
        A(3,3)   = 7505;
        A(4,4)   = 5501;
        A(5,5)   = 7072;
        A(6,6)   = 6507;
        A(7,7)   = 6334;
        A(8,8)   = 7416;
        A(9,9)   = 6966;
        A(10,10) = 4954;
        A(11,11) = 7171;
        A(12,12) = 7075;
        A(13,13) = 6240;
        A(14,14) = 4824;
        A(15,15) = 3817;
        A(16,16) = 2831;
        A(17,17) = 3546;

    case 2
        A = speye(19);        

        A(1,18) = 1;
        A(1,8) = 2;
        A(1,16) = 1;
        A(1,14) = 1;
        A(2,12) = 2;
        A(3,10) = 1;
        A(3,19) = 4;
        A(4,12) = 1;
        A(4,16) = 1;
        A(5,17) = 1;
        A(5,11) = 3;
        A(6,11) = 1;
        A(6,16) = 1;
        A(7,19) = 4;
        A(7,11) = 1;
        A(7,16) = 1;
        A(8,19) = 4;
        A(8,1) = 2;
        A(9,19) = 4;
        A(9,10) = 4;
        A(10,15) = 1;
        A(10,9) = 4;
        A(10,3) = 1;
        A(11,6) = 1;
        A(11,5) = 3;
        A(11,13) = 1;
        A(11,7) = 1;
        A(12,19) = 7;
        A(12,13) = 1;
        A(12,2) = 2;
        A(12,4) = 1;
        A(13,12) = 1;
        A(13,11) = 1;
        A(14,19) = 4;
        A(14,1) = 1;
        A(15,18) = 1;
        A(15,10) = 1;
        A(15,17) = 1;
        A(16,1) = 1;
        A(16,7) = 1;
        A(16,6) = 1;
        A(16,4) = 1;
        A(17,15) = 1;
        A(17,5) = 1;
        A(17,19) = 4;
        A(18,1) = 1;
        A(18,15) = 1;
        A(19,12) = 7;
        A(19,8) = 4;
        A(19,7) = 4;
        A(19,17) = 4;
        A(19,14) = 4;
        A(19,3) = 4;
        A(19,9) = 4;

        A(1,1) = 9;
        A(2,2) = 7;
        A(3,3) = 7;
        A(4,4) = 8;
        A(5,5) = 5;
        A(6,6) = 7;
        A(7,7) = 7;
        A(8,8) = 7;
        A(9,9) = 7;
        A(10,10) = 9;
        A(11,11) = 5;
        A(12,12) = 6;
        A(13,13) = 7;
        A(14,14) = 7;
        A(15,15) = 8;
        A(16,16) = 8;
        A(17,17) = 8;
        A(18,18) = 7;
        A(19,19) = 6;

    end

% Add to transpose to get actual undirected graph
A = A + A';
