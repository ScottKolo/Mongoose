sudo: false
dist: trusty

language: cpp

matrix:
  include:
  # Codecov.io build
  - os: linux
    compiler: gcc
    env:
      - CXX=g++-4.8
      - CC=gcc-4.8
      - SPECIAL=codecov
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - gcc-4.8
          - g++-4.8
          - ggcov
    before_script:
      - export CXX="g++-4.8"
      - export CC="gcc-4.8"
    after_success:
      - make test
      - bash <(curl -s https://codecov.io/bash) -t 6bf41c84-78ee-406d-95b8-7f86895b532c
  
  # Valgrind build
  - os: linux
    compiler: gcc
    env:
      - CXX=g++-6
      - CC=gcc-6
      - SPECIAL=valgrind
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - gcc-6
          - g++-6
          - valgrind
    before_script:
      - export CXX="g++-6"
      - export CC="gcc-6"
    after_success:
      - make test
      - valgrind --error-exitcode=1 --leak-check=full ./tests/mongoose_test_memory ../Matrix/bcspwr04.mtx


  # Linux GCC 6 build
  - os: linux
    compiler: gcc
    env:
      - CXX=g++-6
      - CC=gcc-6
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - gcc-6
          - g++-6
    before_script:
      - export CXX="g++-6"
      - export CC="gcc-6"
    after_success:
      - make test

  # Linux GCC 5 build
  - os: linux
    compiler: gcc
    env:
      - CXX=g++-5
      - CC=gcc-5
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - gcc-5
          - g++-5
    before_script:
      - export CXX="g++-5"
      - export CC="gcc-5"
    after_success:
      - make test

  # Linux GCC 4.9 build
  - os: linux
    compiler: gcc
    env:
      - CXX=g++-4.9
      - CC=gcc-4.9
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - gcc-4.9
          - g++-4.9
    before_script:
      - export CXX="g++-4.9"
      - export CC="gcc-4.9"
    after_success:
      - make test

  # Linux GCC 4.8 build
  - os: linux
    compiler: gcc
    env:
      - CXX=g++-4.8
      - CC=gcc-4.8
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - gcc-4.8
          - g++-4.8
    before_script:
      - export CXX="g++-4.8"
      - export CC="gcc-4.8"
    after_success:
      - make test

  # Linux GCC 4.7 build
  - os: linux
    compiler: gcc
    env:
      - CXX=g++-4.7
      - CC=gcc-4.7
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - gcc-4.7
          - g++-4.7
    before_script:
      - export CXX="g++-4.7"
      - export CC="gcc-4.7"
    after_success:
      - make test

  # Linux GCC 4.6 build
  - os: linux
    compiler: gcc
    env:
      - CXX=g++-4.6
      - CC=gcc-4.6
    addons:
      apt:
        sources:
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - gcc-4.6
          - g++-4.6
    before_script:
      - export CXX="g++-4.6"
      - export CC="gcc-4.6"
    after_success:
      - make test

  # Linux Clang 3.9.0 build
  - os: linux
    compiler: clang
    env:
      - CXX=clang++-3.9
      - CC=clang-3.9
    addons:
        apt:
          packages:
            - clang-3.9
            - libc++-dev
            - ggcov
          sources: &sources
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise
            - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main'
              key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'
    before_script:
      - export CXX="clang++-3.9"
      - export CC="clang-3.9"
    after_success:
      - make test

  # Linux Clang 3.8 build
  - os: linux
    compiler: clang
    env:
      - CXX=clang++-3.8
      - CC=clang-3.8
    addons:
      apt:
        sources:
          - llvm-toolchain-precise-3.8
        packages:
          - cmake
          - clang-3.8
          - clang++-3.8
    before_script:
      - export CXX="clang++-3.8"
      - export CC="clang-3.8"
    after_success:
      - make test

  # Linux Clang 3.7 build
  - os: linux
    compiler: clang
    env:
      - CXX=clang++-3.7
      - CC=clang-3.7
    addons:
      apt:
        sources:
          - llvm-toolchain-precise-3.7
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - clang-3.7
          - clang++-3.7
    before_script:
      - export CXX="clang++-3.7"
      - export CC="clang-3.7"
    after_success:
      - make test

  # Linux Clang 3.6.0 build
  - os: linux
    compiler: clang
    env:
      - CXX=clang++-3.6
      - CC=clang-3.6
    addons:
      apt:
        sources:
          - llvm-toolchain-precise-3.6
          - ubuntu-toolchain-r-test
        packages:
          - cmake
          - clang-3.6
          - clang++-3.6
    before_script:
      - export CXX="clang++-3.6"
      - export CC="clang-3.6"
    after_success:
      - make test

  # Linux Clang 3.5.0 build
  # Linux Clang 3.4 build
  # Linux Clang 3.3 build
  # macOS 

script:
  # show OS/compiler version
  - uname -a
  - $CXX --version
  - $CC --version

  # compile
  - mkdir _build
  - cd _build
  - cmake ..
  - make

  # execute unit tests
  - make test